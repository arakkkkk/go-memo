// Code generated by ent, DO NOT EDIT.

package ent

import (
	"memo/ent/memo"
	"memo/ent/schema"
	"memo/ent/user"
	"time"

	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	memoFields := schema.Memo{}.Fields()
	_ = memoFields
	// memoDescDescription is the schema descriptor for description field.
	memoDescDescription := memoFields[2].Descriptor()
	// memo.DefaultDescription holds the default value on creation for the description field.
	memo.DefaultDescription = memoDescDescription.Default.(string)
	// memoDescUpdatedAt is the schema descriptor for updated_at field.
	memoDescUpdatedAt := memoFields[3].Descriptor()
	// memo.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	memo.DefaultUpdatedAt = memoDescUpdatedAt.Default.(func() time.Time)
	// memoDescCreatedAt is the schema descriptor for created_at field.
	memoDescCreatedAt := memoFields[4].Descriptor()
	// memo.DefaultCreatedAt holds the default value on creation for the created_at field.
	memo.DefaultCreatedAt = memoDescCreatedAt.Default.(func() time.Time)
	// memoDescID is the schema descriptor for id field.
	memoDescID := memoFields[0].Descriptor()
	// memo.DefaultID holds the default value on creation for the id field.
	memo.DefaultID = memoDescID.Default.(func() uuid.UUID)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[2].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
}
