// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// LikeRecordsColumns holds the columns for the "like_records" table.
	LikeRecordsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "user_id", Type: field.TypeInt},
		{Name: "memo_id", Type: field.TypeUUID},
		{Name: "created_at", Type: field.TypeTime},
	}
	// LikeRecordsTable holds the schema information for the "like_records" table.
	LikeRecordsTable = &schema.Table{
		Name:       "like_records",
		Columns:    LikeRecordsColumns,
		PrimaryKey: []*schema.Column{LikeRecordsColumns[0]},
	}
	// MemosColumns holds the columns for the "memos" table.
	MemosColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "user_id", Type: field.TypeInt, Nullable: true},
		{Name: "description", Type: field.TypeString, Default: ""},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "like_record_memos", Type: field.TypeInt, Nullable: true},
		{Name: "user_memos", Type: field.TypeInt, Nullable: true},
	}
	// MemosTable holds the schema information for the "memos" table.
	MemosTable = &schema.Table{
		Name:       "memos",
		Columns:    MemosColumns,
		PrimaryKey: []*schema.Column{MemosColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "memos_like_records_memos",
				Columns:    []*schema.Column{MemosColumns[5]},
				RefColumns: []*schema.Column{LikeRecordsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "memos_users_memos",
				Columns:    []*schema.Column{MemosColumns[6]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeBytes},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "like_record_users", Type: field.TypeInt, Nullable: true},
		{Name: "memo_users", Type: field.TypeUUID, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "users_like_records_users",
				Columns:    []*schema.Column{UsersColumns[4]},
				RefColumns: []*schema.Column{LikeRecordsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "users_memos_users",
				Columns:    []*schema.Column{UsersColumns[5]},
				RefColumns: []*schema.Column{MemosColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		LikeRecordsTable,
		MemosTable,
		UsersTable,
	}
)

func init() {
	MemosTable.ForeignKeys[0].RefTable = LikeRecordsTable
	MemosTable.ForeignKeys[1].RefTable = UsersTable
	UsersTable.ForeignKeys[0].RefTable = LikeRecordsTable
	UsersTable.ForeignKeys[1].RefTable = MemosTable
}
